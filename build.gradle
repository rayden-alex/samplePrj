import org.junit.platform.console.options.Details

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.+'
    }
}

plugins {
    id 'net.ltgt.apt' version '0.15'
    //  https://habrahabr.ru/post/345520/      https://github.com/tbroyer/gradle-apt-plugin
}

group 'samples'
version '1.0-SNAPSHOT'


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.junit.platform.gradle.plugin'

apply plugin: 'war'


sourceCompatibility = 1.8
targetCompatibility = 1.8


war {
    baseName = 'gs-rest'
    version = ''
}


repositories {
    jcenter()
    // mavenCentral()
}


ext {
    junit4Version = '+'
    junitVintageVersion = '+'
    junitPlatformVersion = '+'
    junitJupiterVersion = '+'

    log4jVersion = '2.9.0'
    springVersion = '5.0.5.RELEASE'
    hibernateVersion = '5.2.13.Final'
}

configurations.all {
    // Убирает зависимость Spring от commons-logging
    exclude group: "commons-logging", module: "commons-logging"
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.16.+'
    testCompileOnly 'org.projectlombok:lombok:1.16.+'
    annotationProcessor 'org.projectlombok:lombok:1.16.+'
    testAnnotationProcessor 'org.projectlombok:lombok:1.16.+'


    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-orm:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"


    compile("org.hibernate:hibernate-core:${hibernateVersion}") {
        //exclude group: 'org.jboss.logging', module: 'jboss-logging'
    }
//    compile("org.hibernate:hibernate-java8:${hibernateVersion}"){  // С версии 5.2 включено в core
//        exclude group: 'org.jboss.logging', module: 'jboss-logging'
//    }


    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.+'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: '2.+'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.+' // for REST produces
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.+'


    compile group: 'org.apache.tomcat', name: 'tomcat-jdbc', version: '8.5.+'
    compile group: 'org.firebirdsql.jdbc', name: 'jaybird-jdk18', version: '3.+'

    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.+'

    // It is not necessary nor recommended to add JSR 305 dependency in project classpath
    // to take advantage of Spring null-safe API. Only projects like Spring-based libraries
    // using null-safety annotations in their codebase should add com.google.code.findbugs:jsr305:3.0.2
    // with compileOnly Gradle configuration or Maven provided scope to avoid compile warnings.
    //    compile 'com.google.code.findbugs:jsr305:3.0.2'

    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.+'



    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile group: 'com.github.springtestdbunit', name: 'spring-test-dbunit', version: '1.+'
    testCompile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.+'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.+'


    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.+'
    testCompile(group: 'org.dbunit', name: 'dbunit', version: '+') {
        exclude group: 'junit'
    }

    // JUnit Jupiter API and TestEngine implementation
    testCompile "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"

    // If you also want to support JUnit 3 and JUnit 4 tests
    //testCompile("junit:junit:${junit4Version}")
    //testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}")

    // To avoid compiler warnings about @API annotations in JUnit code
    // testCompileOnly('org.apiguardian:apiguardian-api:1.0.+')

    // To use Log4J's LogManager
    //testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
    //testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")

    // Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
    testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")

    //allows us to run tests and test suites in a JUnit 4 environment.
    //testCompile("org.junit.platform:junit-platform-runner:${junitPlatformVersion}")

    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.+'
    //testCompile 'org.assertj:assertj-db:1.2.0'
}

junitPlatform {
    // platformVersion '1.0.1'
    filters {
        engines {
            include 'junit-jupiter'
            // include 'junit-vintage'
            // exclude 'custom-engine'
        }
        tags {
            // include 'fast'
            //exclude 'slow'
        }
        includeClassNamePattern '^.*Tests?.*$'
        //includeClassNamePatterns '.*Tests', '.*Test'
        //includeClassNamePatterns '.+'
    }
    // configurationParameter 'junit.jupiter.conditions.deactivate', '*'
    // enableStandardTestTask true
    // reportsDir file('build/test-results/junit-platform') // this is the default
    //logManager 'org.apache.logging.log4j.jul.LogManager'

    details Details.TREE
}


test {
    testLogging.showStandardStreams = true
}



