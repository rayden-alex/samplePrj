buildscript {
    repositories {
        jcenter()
    }

// from Gradle 4.6 include native support JUnit test ---> gradle-plugin no needed anymore
//    dependencies {
//        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.+'
//    }
}

plugins {
    id 'net.ltgt.apt' version '0.15'
    //  https://habrahabr.ru/post/345520/      https://github.com/tbroyer/gradle-apt-plugin
}

group 'samples'
version '1.0-SNAPSHOT'


apply plugin: 'java'
apply plugin: 'idea'

// from Gradle 4.6 include native support JUnit test ---> gradle-plugin no needed anymore
// apply plugin: 'org.junit.platform.gradle.plugin'

apply plugin: 'war'


sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8


war {
    baseName = 'gs-rest'
    version = ''
}


repositories {
    jcenter()
    // mavenCentral()
}


ext {
    //junit4Version = '+'
    junitVintageVersion = '5.2.+'
    junitPlatformVersion = '1.2.+'
    junitJupiterVersion = '5.2.+'

    log4jVersion = '2.9.0'
    springVersion = '5.0.7.RELEASE'
    springSecurityVersion = '5.0.6.RELEASE'
    hibernateVersion = '5.2.13.Final'
}

configurations.all {
    // Убирает зависимость Spring от commons-logging
    exclude group: "commons-logging", module: "commons-logging"
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.+'
    testCompileOnly 'org.projectlombok:lombok:1.+'
    annotationProcessor 'org.projectlombok:lombok:1.+'
    testAnnotationProcessor 'org.projectlombok:lombok:1.+'


    compile "org.springframework:spring-context:${springVersion}"
    compile "org.springframework:spring-orm:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile "org.springframework.security:spring-security-web:${springSecurityVersion}"
    compile "org.springframework.security:spring-security-config:${springSecurityVersion}"


    compile("org.hibernate:hibernate-core:${hibernateVersion}") {
        //exclude group: 'org.jboss.logging', module: 'jboss-logging'
    }
//    compile("org.hibernate:hibernate-java8:${hibernateVersion}"){  // С версии 5.2 включено в core
//        exclude group: 'org.jboss.logging', module: 'jboss-logging'
//    }


    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.+'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-csv', version: '2.+'
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.+'
    // for REST produces
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.+'


    providedCompile group: 'org.apache.tomcat', name: 'tomcat-jdbc', version: '8.5.23'
    providedCompile group: 'org.apache.tomcat', name: 'tomcat-dbcp', version: '8.5.23'

    // provided, т.к. оба файла все равно закинуты в Tomcat/lib
    providedCompile(group: 'org.firebirdsql.jdbc', name: 'jaybird-jdk18', version: '3.+') {
        exclude group: 'javax.resource', module: 'connector-api'
    }
    providedCompile group: 'javax.resource', name: 'connector-api', version: '1.5'


    providedCompile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.+'

    // It is not necessary nor recommended to add JSR 305 dependency in project classpath
    // to take advantage of Spring null-safe API. Only projects like Spring-based libraries
    // using null-safety annotations in their codebase should add com.google.code.findbugs:jsr305:3.0.2
    // with compileOnly Gradle configuration or Maven provided scope to avoid compile warnings.
    //    compile 'com.google.code.findbugs:jsr305:3.0.2'

    // ---------------   Logging -------------------
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.+'

    // ---------------  Testing --------------------
    testCompile "org.springframework:spring-test:${springVersion}"
    testCompile group: 'com.github.springtestdbunit', name: 'spring-test-dbunit', version: '1.+'
    testCompile group: 'com.jayway.jsonpath', name: 'json-path', version: '2.+'
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: '1.+'

    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.+'
    testCompile(group: 'org.dbunit', name: 'dbunit', version: '+') {
        exclude group: 'junit'
    }

    // JUnit Jupiter API and TestEngine implementation
    testCompile "org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}"

    // To avoid compiler warnings about @API annotations in JUnit code
    // testCompileOnly('org.apiguardian:apiguardian-api:1.0.+')

    // Only needed to run tests in an (IntelliJ) IDE(A) that bundles an older version
    testRuntimeOnly("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}")

    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.+'
    //testCompile 'org.assertj:assertj-db:1.2.0'
}

//junitPlatform { // <--------  from 'org.junit.platform.gradle.plugin'. No needed anymore because of native support
//    // platformVersion '1.0.1'
//    filters {
//        engines {
//            include 'junit-jupiter'
//            // include 'junit-vintage'
//            // exclude 'custom-engine'
//        }
//        tags {
//            // include 'fast'
//            //exclude 'slow'
//        }
//        includeClassNamePattern '^.*Tests?.*$'
//        //includeClassNamePatterns '.*Tests', '.*Test'
//        //includeClassNamePatterns '.+'
//    }
//    // configurationParameter 'junit.jupiter.conditions.deactivate', '*'
//    // enableStandardTestTask true
//    // reportsDir file('build/test-results/junit-platform') // this is the default
//    //logManager 'org.apache.logging.log4j.jul.LogManager'
//
//    details Details.TREE
//}


test {
    // https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/testing/Test.html

    // enable JUnit Platform (a.k.a. JUnit 5) support
    useJUnitPlatform {
        // excludeTags 'slow'
        includeEngines 'junit-jupiter'
        excludeEngines 'junit-vintage'

    }

    // set a system property for the test JVM(s)
    // systemProperty 'someProp', 'someValue'

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true

    // Fail the 'test' task on the first test failure
    failFast = false

    // explicitly include or exclude tests
    // include 'org/foo/**'
    // exclude 'org/boo/**'

}



